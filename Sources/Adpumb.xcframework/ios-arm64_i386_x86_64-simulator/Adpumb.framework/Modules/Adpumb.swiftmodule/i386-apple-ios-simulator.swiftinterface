// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target i386-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Adpumb
import AdSupport
@_exported import Adpumb
import AppTrackingTransparency
import FBAudienceNetwork
import Foundation
import GoogleMobileAds
import QuartzCore
import Swift
import UIKit
import _Concurrency
@_hasMissingDesignatedInitializers public class Storage {
  public static func setAdShownTime(_ placementOptions: Adpumb.PlacementOptions)
  @objc deinit
}
public protocol AdPumbDelegate {
  func onAdFinished(success: Swift.Bool)
}
public class AdDisplayManager {
  public init()
  public func getAdConfig() -> Adpumb.KempaAdConfig?
  public static func getInstance() -> Adpumb.AdDisplayManager
  public func updateContext(viewController: UIKit.UIViewController?)
  public static func configure(adConfigJson: Swift.String)
  public func showAd(viewController: UIKit.UIViewController, adCompletionHandler: Adpumb.AdPumbDelegate?, placementOptions: Adpumb.PlacementOptions)
  public func showPendingAd()
  public func initializeAdapter()
  public static func updatePresenter(viewController: UIKit.UIViewController?)
  public static func getPresenter() -> UIKit.UIViewController
  @objc deinit
}
public protocol MediatioionDelegate {
  func onMediationInitialized()
  func onMedatioinFailed(error: Swift.String)
}
@_hasMissingDesignatedInitializers public class KempaMediationAdapter {
  public static func setKempaMediationAdapter(kempaMediationAdapter: Adpumb.KempaMediationAdapter)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class Configuration {
  @objc deinit
}
public class KempaAdNetwork : Swift.Codable {
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@_hasMissingDesignatedInitializers public class AdVendor {
  public static let FACEBOOK: Swift.String
  public static let GOOGLE: Swift.String
  @objc deinit
}
public protocol VpnFreeDelegate {
  func onOutOfVPN()
  func onVPN()
}
public class KempaAdConfig : Swift.Codable {
  public var useAppodeal: Swift.Bool
  public var googleInterstitialAdReload: Swift.Int
  public var disabledPlacements: [Swift.String]
  public var adNetworks: [Adpumb.KempaAdNetwork]
  public var version: Swift.String
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
public class PlacementOptions {
  public var placement: Swift.String
  public var frequencyCapInMinutes: Swift.Int
  public static let REWARD: Swift.String
  public init(placement: Swift.String, frequencyCapInMinutes: Swift.Int)
  @objc deinit
}
